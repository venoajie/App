#!/usr/bin/python3
# -*- coding: utf-8 -*-
import asyncio
import async_timeout
from loguru import logger as log
import logging
import redis.asyncio as redis
import orjson


logging.basicConfig(level=logging.DEBUG)


async def send_message(CHANNEL_NAME, user_id: int, message: str):
    # write real code here
    log.debug(f"Sending message to user {CHANNEL_NAME} {user_id}: {message}")


async def handle_notification(CHANNEL_NAME):
    r = redis.Redis()
    pubsub = r.pubsub()
    await pubsub.subscribe(CHANNEL_NAME)
    while True:
        try:
            async with async_timeout.timeout(1):
                message = await pubsub.get_message()
                if message and message["type"] == "message":
                    payload = orjson.loads(message["data"])
                    # TODO: do validation on payload
                    await send_message(CHANNEL_NAME, payload["user_id"], payload["message"])
        except Exception as e:
            logging.error(e)


if __name__ == "__main__":
    CHANNEL_NAME = "notification"
    asyncio.run(handle_notification(CHANNEL_NAME))