#!/usr/bin/python3
# -*- coding: utf-8 -*-

# built ins
import asyncio

# installed
from loguru import logger as log
import uvloop
asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())

from transaction_management.deribit.data_producer import (
    StreamAccountData,)
from transaction_management.deribit.running_strategies import executing_strategies
from transaction_management.deribit.user_chg import saving_and_relabelling_orders
from utilities.system_tools import (
    async_raise_error_message,)
        
async def main():
    
    sub_account_id = "deribit-148510"
    
    try:
        
        queue: Queue = asyncio.Queue(maxsize=10)
        
        #processes = max(1,int (cpu_count() / 4) - 1)
        
        #maxtasksperchild=1
        
        stream = StreamAccountData(sub_account_id)
       
        producer_task = asyncio.create_task(stream.ws_manager(queue)) 
        
        await asyncio.gather(
            producer_task, 
            executing_strategies(
                sub_account_id,
                queue),
            saving_and_relabelling_orders(
                sub_account_id,
                queue),)
        
    except Exception as error:
        log.critical (error)
        
        await async_raise_error_message(
            error,
            "WebSocket connection - failed to distribute_incremental_ticker_result_as_per_data_type",
        )

asyncio.run(main())
